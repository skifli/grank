{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Grank Grank is a feature rich Dank Memer automation program that is open-source and free to use, as well as having many self-bot commands to make using Grank easier. Grank is inspired by dankgrinder . Since dankgrinder has been discontinued and the recommended fork has also been discontinued, I decided to make my own version from scratch in Python. Grank is as good as, if not better, than dankgrinder. Choose your docs: Choose the docs you would like to view, or stay on this page for more information on why & how Grank was created. User Click here to proceed to the user documentation. This includes details on how to set-up Grank. Developer Click here to proceed to the developer documentation. This includes details on how Grank works Why was Grank created Back in early January of 2022, me and my friends started grinding out Dank Memer as a fun past-time to see who could make the most money / networth. For the first half of January, I grinded Dank Memer legitimately, but then realised how easy it would be to automate it. My first attempt at a grinder for Dank Memer was really bad - it was a simple hotkey script created using AHK and, understandably, could only run when Discord was the open window. This made it extremely inefficient. After searching around on the internet for a better way to automate Dank Memer, I came across dankgrinder . It seems I came a bit late to the party, since both it and the recommended fork were discontinued by the time I found them. Nevertheless, the recommended fork still functioned as it was meant to. I quickly realised thought, that while there was still a chance of the fork getting developed on once more, the chances were slim since V4NSH4J was moving towards other projects, at that time namely DMDGO . I decided to put my skills to the test by trying to make my own version in Python which, needless to say, has been gaining traction increasingly in the past few months. And now, I can flex to my friends about having 100x the money they have while they fail to work out how to setup the script ;-) (it's really easy idk why they can't lol). How does Grank work Before I get into exactly how Grank works, I would like to give a huge thanks to V4NSH4J . They're the creator of the now unsupported dankgrinder fork, and without them Grank may never have been completed. Everything on the internet is request based. You search for something on Google - you send request(s) to Google. You watch your favourite YouTube video - you send request(s) to YouTube. And specifically for us, you send a message on Discord - you send request(s) to Discord. What I'm trying to say is that everything you do is based on requests, so if you mimic those requests yourself, you can easily automate the action. If you send a message on Discord, and use the Network tab in the Inspect screen, you can see a POST request to https://discord.com/api/v10/channels/{channel-id}. Grank mimics those requests, as can be seen in the various subprograms of the class Instance in /src/instance/Client.py . After that, it's just a game of learning your opponent (in our case Dank Memer), and working out the most optimal ways to respond to them. Grank does not use any Discord self-bot library, since I wanted to code my own for maximum flexibility (as can be seen in /src/discord/Gateway.py & /src/instance/Client.py ), and so the Discord Developer Docs (intended for bot creators, not self-bot creators) were (ironically) a great help in working out how to automate the commands. Developers Sole Developer [ME] - didlly Contributors SXVXGE Helpers V4NSH4J","title":"Home"},{"location":"#welcome-to-grank","text":"Grank is a feature rich Dank Memer automation program that is open-source and free to use, as well as having many self-bot commands to make using Grank easier. Grank is inspired by dankgrinder . Since dankgrinder has been discontinued and the recommended fork has also been discontinued, I decided to make my own version from scratch in Python. Grank is as good as, if not better, than dankgrinder.","title":"Welcome to Grank"},{"location":"#choose-your-docs","text":"Choose the docs you would like to view, or stay on this page for more information on why & how Grank was created.","title":"Choose your docs:"},{"location":"#user","text":"Click here to proceed to the user documentation. This includes details on how to set-up Grank.","title":"User"},{"location":"#developer","text":"Click here to proceed to the developer documentation. This includes details on how Grank works","title":"Developer"},{"location":"#why-was-grank-created","text":"Back in early January of 2022, me and my friends started grinding out Dank Memer as a fun past-time to see who could make the most money / networth. For the first half of January, I grinded Dank Memer legitimately, but then realised how easy it would be to automate it. My first attempt at a grinder for Dank Memer was really bad - it was a simple hotkey script created using AHK and, understandably, could only run when Discord was the open window. This made it extremely inefficient. After searching around on the internet for a better way to automate Dank Memer, I came across dankgrinder . It seems I came a bit late to the party, since both it and the recommended fork were discontinued by the time I found them. Nevertheless, the recommended fork still functioned as it was meant to. I quickly realised thought, that while there was still a chance of the fork getting developed on once more, the chances were slim since V4NSH4J was moving towards other projects, at that time namely DMDGO . I decided to put my skills to the test by trying to make my own version in Python which, needless to say, has been gaining traction increasingly in the past few months. And now, I can flex to my friends about having 100x the money they have while they fail to work out how to setup the script ;-) (it's really easy idk why they can't lol).","title":"Why was Grank created"},{"location":"#how-does-grank-work","text":"Before I get into exactly how Grank works, I would like to give a huge thanks to V4NSH4J . They're the creator of the now unsupported dankgrinder fork, and without them Grank may never have been completed. Everything on the internet is request based. You search for something on Google - you send request(s) to Google. You watch your favourite YouTube video - you send request(s) to YouTube. And specifically for us, you send a message on Discord - you send request(s) to Discord. What I'm trying to say is that everything you do is based on requests, so if you mimic those requests yourself, you can easily automate the action. If you send a message on Discord, and use the Network tab in the Inspect screen, you can see a POST request to https://discord.com/api/v10/channels/{channel-id}. Grank mimics those requests, as can be seen in the various subprograms of the class Instance in /src/instance/Client.py . After that, it's just a game of learning your opponent (in our case Dank Memer), and working out the most optimal ways to respond to them. Grank does not use any Discord self-bot library, since I wanted to code my own for maximum flexibility (as can be seen in /src/discord/Gateway.py & /src/instance/Client.py ), and so the Discord Developer Docs (intended for bot creators, not self-bot creators) were (ironically) a great help in working out how to automate the commands.","title":"How does Grank work"},{"location":"#developers","text":"","title":"Developers"},{"location":"#sole-developer","text":"[ME] - didlly","title":"Sole Developer"},{"location":"#contributors","text":"SXVXGE","title":"Contributors"},{"location":"#helpers","text":"V4NSH4J","title":"Helpers"},{"location":"user-docs/","text":"User Documentation Features Ease of use - Once Grank has been setup, you can control it through Discord using many different and useful commands. Smart - If Grank detects that the account does not have an item required for a command (e.g. not having a hunting rifle for the pls hunt command), Grank will automatically buy the item. What if the account doesn't have enough money in it's wallet? Then Grank checks the amount of money in the account's bank. If the two combined provide sufficient funds to buy the item, Grank will withdraw the required amount (and no more), and will buy the item. If the account doesn't have enough money in it's wallet and bank combined, Grank logs a warning stating this. Anti detection features - Grank has many features to prevent detection by Dank Memer, Discord or other users. One of these such features is a Typing Indicator. When you start typing a message on Discord, a typing indicator appears, which lets everyone else in the channel know you are typing a message. If enabled, Grank will trigger the Typing Indicator, wait a random amount (which can be controlled in the config), and send the command. This also adds a random gap between commands that makes the self-bot more human. Custom commamds - Want to periodically run a command like pls bet 1000 ? Well you can with Grank. Either add the command to the config file, or take advantage of Grank's self-bot commands feature and run the command grank command add {command} {interval} (where command is the command to be run and interval is how often it should be run). Anti heist - If someone is heisting you, Grank will stop it. Auto join heist - If someone else is being heisted, Grank will join the heist. Auto trade - Automatically trades specified items to an alt account upon receiving the item. Auto accept trade - If someone sends a trade request to Grank, Grank will automatically accept it (provided they are in the allowed user list to do so). NOTE: All these options can be toggled and customised in the config. Supported commands pls beg pls blackjack pls crime pls daily pls dig pls fish pls guess pls highlow pls hunt pls lottery pls postmeme pls search pls snakeeyes pls stream pls trivia pls work pls adv (Partial support) Installing for the first time Download and extract the latest version of Grank from here . Windows Download PyPy from here . Extract the contents into the /src directory. Linux Download PyPy from here (or if that doesn't work from here ). Extract the contents into the /src directory. macOS Download PyPy from here . Extract the contents into the /src directory. NOTE: Everytime you update Grank's source code, you do NOT HAVE to re-download PyPy. Updating Download and extract the latest version of Grank from here into the directory you extracted the previous version of Grank into. Let it overwrite any existing files. Setting up Grank To use Grank, you will have to provide your Discord token. Don't worry, your token is never shared with anyone else. Useful Youtube video on how to get your Discord Token How to enter these details. Open src/credentials.json . You should see a dictionary with a key called TOKEN . Add your token into the list after this key. You can add as many entries as you want. The file has been filled in with a dummy layout so you know how to input your data. You are now ready to use the program. Run pypy main.py (or pypy3 main.py ) in a command prompt in the /src directory to start the program. You do not have to have Discord open to run the program, so you can have the program running in the background while you do other things! How to use Grank Now you have Grank set-up, you are probably wondering how to use Grank. Grank is controlled through Discord. You can view all the commands below, or run grank help to get started on your journey using Grank. You will find more information by running the specific -help command for each command category. Supported commands grank help - Displays the help command. autostart category Name Description autostart Shows a list of all the auto-start channels for this account. autostart -help Shows help about the autostart command. autostart enable Enables the auto-start channels function. autostart disable Disables the auto-start channels function. autostart add 0 Adds the channel with the ID of 0 to the list of auto-start channels. autostart remove Removes the autostart channel. commands / cmds category Name Description commands Shows a list of all the custom commands for this account. commands -help Shows help about the commands command. commands add pls_help 69 Adds the custom command 'pls help' to the list of custom commands and tells Grank it needs to be run every 69 seconds. commands remove pls_help 69 Removes the custom commands called 'pls help' from the list of custom commands. config / conf category Name Description config Shows a list of all the config options and their values for this account. config -help Shows help about the config command. config reset Resets the config to the default settings. config.cooldowns.patron Displays the value of the patron key in the subconfig cooldowns. config.cooldowns.patron = True Sets the patron key in the subconfig cooldowns to True. NOTE : To access keys containing a space character, replace the space with an underscore (_). controllers / cont category Name Description controllers Shows a list of all the controllers for this account. controllers -help Shows help about the controllers command. controllers purge 0 Removes all the logged messages from the controller with the ID of 0 . controllers info 0 Provides information about the controller. This includes information such as when the controller was added, which account added the controller, and what commands the controller has run. controllers add 0: Adds the account with the ID of 0 to the list of controllers. controllers remove 0 Removes the account with the ID of 0 from the list of controllers. NOTE: You can also @mention the user you want to interact with. database / db category Name Description database Shows a list of all the database options and their values for this account. database -help Shows help about the database command. database reset Resets the database to the default settings. info / inf category Name Description info Shows info about the grinder (like session stats, commands ran stats, etc). servers category Name Description servers Shows a list of all the blacklisted servers for this account. servers -help Shows help about the servers command. servers enable Enables the blacklisted servers function. servers disable Disables the blacklisted servers function. servers add 0 Adds the server with the ID of 0 to the list of blacklisted servers. servers remove 0 Removes the server with the ID of 0 from the list of blacklisted servers. shifts category Name Description shifts Shows a list of all the shifts for this account. shifts -help Shows help about the shifts command. shifts enable Enables the shifts function. shifts disable Disables the shifts function. shifts add 7200 3600 60 Adds a shift with an active length of 7200 , a passive length of 3600 , and a variation of 60 . shifts remove 1 Removes the 1st shift profile. start category Name Description start Starts the grinder. start -help Shows help about the start command. stop category Name Description stop Stops the grinder. stop -help Shows help about the stop command. Config file The config.yml file is used to change the way the program runs. commands category Values in the commands category tell the program whether or not to run certain commands . Name Type Default Value Description adventure Boolean True Tells the program whether or not to run the command pls adventure . beg Boolean True Tells the program whether or not to run the command pls beg . crime Boolean True Tells the program whether or not to run the command pls crime . daily Boolean True Tells the program whether or not to run the command pls daily . dig Boolean True Tells the program whether or not to run the command pls dig . fish Boolean True Tells the program whether or not to run the command pls fish . guess Boolean True Tells the program whether or not to run the command pls guess . highlow Boolean True Tells the program whether or not to run the command pls highlow . hunt Boolean True Tells the program whether or not to run the command pls hunt . postmeme Boolean True Tells the program whether or not to run the command pls postmeme . search Boolean True Tells the program whether or not to run the command pls search . trivia Boolean True Tells the program whether or not to run the command pls trivia . vote Boolean True Tells the program whether or not to vote for Dank Memer on Discord Bot List. work Boolean True Tells the program whether or not to run the command pls work . cooldowns category Values in the cooldowns category tell the program the cooldowns for each command & cooldowns between commands . Edit them only if you know what you are doing. You have the most optimal settings by default. lottery category Values in the lottery category tell the program whether lottery tickets should be bought , and how often they should be bought . Name Type Default Value Description enabled Boolean False Tells the program whether or not to buy lottery tickets. cooldown Integer 3600 Tells the program the interval between buying lottery tickets. stream category Values in the stream category tell the program whether or not to run the command pls stream , and what buttons should it interact with . Name Type Default Value Description enabled Boolean True Tells the program whether or not to run the command pls stream . ads Boolean True Tells the program whether or not to collect run ads during the stream. chat Boolean True Tells the program whether or not to read the chat during the stream. donations Boolean True Tells the program whether or not to collect donations during the stream. blackjack category Values in the blackjack category tell the program whether or not to run the command pls blackjack , and how much it should bet each time . Name Type Default Value Description enabled Boolean False Tells the program whether or not to run the command pls blackjack . random Boolean False Tells the program whether or not to choose a random amount each time the command pls blackjack is run, or to choose a pre-set amount. amount Integer 1500 The pre-set amount to be bet if random is set to False . minimum Integer 1500 The minimum amount to be bet if random is set to True . maximum Integer 3000 The maximum amount to be bet if random is set to True . snakeeyes category Values in the snakeeyes category tell the program whether or not to run the command pls snakeeyes , and how much it should bet each time . Name Type Default Value Description enabled Boolean False Tells the program whether or not to run the command pls snakeeyes . random Boolean False Tells the program whether or not to choose a random amount each time the command pls snakeeyes is run, or to choose a pre-set amount. amount Integer 1500 The pre-set amount to be bet if random is set to False . minimum Integer 1500 The minimum amount to be bet if random is set to True . maximum Integer 3000 The maximum amount to be bet if random is set to True . custom commands category Values in the custom commands category tell the program what custom commands should be run and their cooldowns . Name Type Default Value Description enabled Boolean False Tells the program whether or not to run any of the custom commands. NOTE: You can add your own custom commands by following the layout for the default options. shifts category Values in the shifts category tell the program whether or not to run Grank in shifts , and the length of active and passive phases . Name Type Default Value Description enabled Boolean False Tells the program whether or not to run in shifts. Example shifts config You can add as many shift configs as you want, so long as you number them in order starting from 1 . The program will infinitely cycle through all the shift configurations. Name Type Default Value Description active Integer 7200 Tells the program how long the program should run before sleeping (in seconds). passive Integer 3600 Tells the program how long the program should sleep before running again (in seconds). variation Integer 3600 Tells the program how much to vary the shifts by. auto buy category Values in the auto buy category tell the program whether or not to buy certain items if needed. Name Type Default Value Description enabled Boolean True If this is set to False no items will be bought. If it is set to True the program will try and buy the item if their respective config value is True . shovel Boolean True Tells the program whether or not to try and buy the item shovel if needed and the user doesn't have it. fishing pole Boolean True Tells the program whether or not to try and buy the item fishing pole if needed and the user doesn't have it. hunting rifle Boolean True Tells the program whether or not to try and buy the hunting rifle if needed and the user doesn't have it. keyboard Boolean True Tells the program whether or not to try and buy the item keyboard if needed and the user doesn't have it. mouse Boolean True Tells the program whether or not to try and buy the item mouse if needed and the user doesn't have it. adventure ticket Boolean True Tells the program whether or not to try and buy the item adventure ticket if needed and the user doesn't have it. auto trade category Values in the auto trade category tell the program who items should be traded to , and what items should be traded. Name Type Default Value Description enabled Boolean False If this is set to False no items will be traded. If it is set to True the program will try and trade the item if their respective config value is True . trader token String None The token of the user the items should be traded to. bank note Boolean True Tells the program whether or not to try and trade the item bank note to the user specified in the trader option. tidepod Boolean True Tells the program whether or not to try and trade the item tidepod to the user specified in the trader option. NOTE: You can add your own items to be traded by following the layout for the default options. auto accept trade category Values in the anti heist category tell the program whether or not to automatically accept trades and who to accept them from . Name Type Default Value Description enabled Boolean True Tells the program whether or not to automatically accept trades from other users. traders List [0, 0] Tells the program which accounts to automatically accept trades from. auto sell category Values in the auto sell category tell the program what items should be sold (upon receiving them). Name Type Default Value Description enabled Boolean False If this is set to False no items will be sold. If it is set to False the program will try and sell the item if their respective config value is True . apple Boolean True Tells the program whether or not to try and sell the item apple (upon receiving it). common fish Boolean True Tells the program whether or not to try and sell the item common fish (upon receiving it). NOTE: You can add your own items to be traded by following the layout for the default options. typing indicator category Values in the typing indicator category tell the program whether to make Discord think the self-bot is typing, and for how long it should. This is just for aesthetics and I would recommend it to be off in private servers to increase command speed, and on in public servers to make the self-bot look more legitimate. Name Type Default Value Description enabled Boolean False If this is set to True , the program will make Discord think the self-bot is typing. If it is set to False the program will not make Discord think the self-bot is typing, thus increasing command speed. minimum Float 0 The minimum time for the program to sleep after Discord is told that the user is typing. maximum Float 0.5 The maximum time for the program to sleep after Discord is told that the user is typing. message delay category Values in the messge delay category tell the program whether to add random pauses before sending messages and how long the pauses should be for . Name Type Default Value Description enabled Boolean False If this is set to True , the program will add random pauses before sending messages. minimum Float 0 The minimum time for the program to pause. maximum Float 0.5 The maximum time for the program to pause. button delay category Values in the button delay category tell the program whether to add random pauses before interacting with buttons and how long the pauses should be for . Name Type Default Value Description enabled Boolean False If this is set to True , the program will add random pauses before interacting with buttons. minimum Float 0 The minimum time for the program to pause. maximum Float 0.5 The maximum time for the program to pause. dropdown delay category Values in the dropdown delay category tell the program whether to add random pauses before selecting dropdowns and how long the pauses should be for . Name Type Default Value Description enabled Boolean False If this is set to True , the program will add random pauses before selecting dropdowns. minimum Float 0 The minimum time for the program to pause. maximum Float 0.5 The maximum time for the program to pause. anti heist category Values in the anti heist category tell the program whether or not to automatically avert heists by calling the police . Name Type Default Value Description enabled Boolean True Tells the program whether or not to automatically avert heists. auto join heist category Values in the auto join heist category tell the program whether or not to automatically join heists directed to other users . Name Type Default Value Description enabled Boolean True Tells the program whether or not to automatically join heists directed to other users. auto start category Values in the auto start category tell the program whether or not to automatically start the grinder and which channels to automatically start the grinder in . Name Type Default Value Description enabled Boolean False Tells the program whether or not to automatically start the grinder. channel Integer 0 Tells the program which channels to automatically start the grinder in. blacklisted servers category Values in the logging category tell the program whether or not to ignore messages from certain servers and which servers to ignore the messages from . Name Type Default Value Description enabled Boolean False Tells the program whether or not to ignore messages in the specified channel. servers List [0, 0] Tells the program which servers to ingore messages from. settings category Values in the settings category change how Grank functions . Name Type Default Value Description prefix String grank Granks self-bot commands prefix. patron Boolean False Changes cooldowns to reflect the cooldowns of patrons . timeout Integer 5 Timeout for waiting for responses from Dank Memer to commands that require user interaction (like pls search ). logging category Values in the logging category tell the program whether or not to log debug and warning messages. We would recommend having at least warning set to True . Fatal errors will be logged regardless of the configuration. Name Type Default Value Description debug Boolean True Tells the program whether or not to log debug messages. warning Boolean True Tells the program whether or not to log warning messages. NOTE : Values in the logging category do not affect logging messages sent when the configuration file is being loaded and the token is being verified. webhook logging subcategory Values in the webhook logging subcategory tell the program whether or not to log events through a webhook and the webhook URL to log through. Name Type Default Value Description enabled True False Tells the program whether or not to log events through a webhook. url String discord.com/api/webhooks/ The webhook URL to log events through. Disclaimer This is a self-bot. Self-bots are against Discord's TOS. Automation of Dank Memer commands also breaks Dank Memer's rules. By using this program you acknowledge that I can take no responsibility for actions taken against you if you are caught. This being said, I believe the chance of being caught running this script is low, provided you take the appropriate measures. The only probable way you will be caught is if someone tries to send you a message and you don't respond.","title":"User Documentation"},{"location":"user-docs/#user-documentation","text":"","title":"User Documentation"},{"location":"user-docs/#features","text":"Ease of use - Once Grank has been setup, you can control it through Discord using many different and useful commands. Smart - If Grank detects that the account does not have an item required for a command (e.g. not having a hunting rifle for the pls hunt command), Grank will automatically buy the item. What if the account doesn't have enough money in it's wallet? Then Grank checks the amount of money in the account's bank. If the two combined provide sufficient funds to buy the item, Grank will withdraw the required amount (and no more), and will buy the item. If the account doesn't have enough money in it's wallet and bank combined, Grank logs a warning stating this. Anti detection features - Grank has many features to prevent detection by Dank Memer, Discord or other users. One of these such features is a Typing Indicator. When you start typing a message on Discord, a typing indicator appears, which lets everyone else in the channel know you are typing a message. If enabled, Grank will trigger the Typing Indicator, wait a random amount (which can be controlled in the config), and send the command. This also adds a random gap between commands that makes the self-bot more human. Custom commamds - Want to periodically run a command like pls bet 1000 ? Well you can with Grank. Either add the command to the config file, or take advantage of Grank's self-bot commands feature and run the command grank command add {command} {interval} (where command is the command to be run and interval is how often it should be run). Anti heist - If someone is heisting you, Grank will stop it. Auto join heist - If someone else is being heisted, Grank will join the heist. Auto trade - Automatically trades specified items to an alt account upon receiving the item. Auto accept trade - If someone sends a trade request to Grank, Grank will automatically accept it (provided they are in the allowed user list to do so). NOTE: All these options can be toggled and customised in the config.","title":"Features"},{"location":"user-docs/#supported-commands","text":"pls beg pls blackjack pls crime pls daily pls dig pls fish pls guess pls highlow pls hunt pls lottery pls postmeme pls search pls snakeeyes pls stream pls trivia pls work pls adv (Partial support)","title":"Supported commands"},{"location":"user-docs/#installing-for-the-first-time","text":"Download and extract the latest version of Grank from here .","title":"Installing for the first time"},{"location":"user-docs/#windows","text":"Download PyPy from here . Extract the contents into the /src directory.","title":"Windows"},{"location":"user-docs/#linux","text":"Download PyPy from here (or if that doesn't work from here ). Extract the contents into the /src directory.","title":"Linux"},{"location":"user-docs/#macos","text":"Download PyPy from here . Extract the contents into the /src directory. NOTE: Everytime you update Grank's source code, you do NOT HAVE to re-download PyPy.","title":"macOS"},{"location":"user-docs/#updating","text":"Download and extract the latest version of Grank from here into the directory you extracted the previous version of Grank into. Let it overwrite any existing files.","title":"Updating"},{"location":"user-docs/#setting-up-grank","text":"To use Grank, you will have to provide your Discord token. Don't worry, your token is never shared with anyone else. Useful Youtube video on how to get your Discord Token","title":"Setting up Grank"},{"location":"user-docs/#how-to-enter-these-details","text":"Open src/credentials.json . You should see a dictionary with a key called TOKEN . Add your token into the list after this key. You can add as many entries as you want. The file has been filled in with a dummy layout so you know how to input your data. You are now ready to use the program. Run pypy main.py (or pypy3 main.py ) in a command prompt in the /src directory to start the program. You do not have to have Discord open to run the program, so you can have the program running in the background while you do other things!","title":"How to enter these details."},{"location":"user-docs/#how-to-use-grank","text":"Now you have Grank set-up, you are probably wondering how to use Grank. Grank is controlled through Discord. You can view all the commands below, or run grank help to get started on your journey using Grank. You will find more information by running the specific -help command for each command category.","title":"How to use Grank"},{"location":"user-docs/#supported-commands_1","text":"grank help - Displays the help command.","title":"Supported commands"},{"location":"user-docs/#autostart-category","text":"Name Description autostart Shows a list of all the auto-start channels for this account. autostart -help Shows help about the autostart command. autostart enable Enables the auto-start channels function. autostart disable Disables the auto-start channels function. autostart add 0 Adds the channel with the ID of 0 to the list of auto-start channels. autostart remove Removes the autostart channel.","title":"autostart category"},{"location":"user-docs/#commands-cmds-category","text":"Name Description commands Shows a list of all the custom commands for this account. commands -help Shows help about the commands command. commands add pls_help 69 Adds the custom command 'pls help' to the list of custom commands and tells Grank it needs to be run every 69 seconds. commands remove pls_help 69 Removes the custom commands called 'pls help' from the list of custom commands.","title":"commands / cmds category"},{"location":"user-docs/#config-conf-category","text":"Name Description config Shows a list of all the config options and their values for this account. config -help Shows help about the config command. config reset Resets the config to the default settings. config.cooldowns.patron Displays the value of the patron key in the subconfig cooldowns. config.cooldowns.patron = True Sets the patron key in the subconfig cooldowns to True. NOTE : To access keys containing a space character, replace the space with an underscore (_).","title":"config / conf category"},{"location":"user-docs/#controllers-cont-category","text":"Name Description controllers Shows a list of all the controllers for this account. controllers -help Shows help about the controllers command. controllers purge 0 Removes all the logged messages from the controller with the ID of 0 . controllers info 0 Provides information about the controller. This includes information such as when the controller was added, which account added the controller, and what commands the controller has run. controllers add 0: Adds the account with the ID of 0 to the list of controllers. controllers remove 0 Removes the account with the ID of 0 from the list of controllers. NOTE: You can also @mention the user you want to interact with.","title":"controllers / cont category"},{"location":"user-docs/#database-db-category","text":"Name Description database Shows a list of all the database options and their values for this account. database -help Shows help about the database command. database reset Resets the database to the default settings.","title":"database / db category"},{"location":"user-docs/#info-inf-category","text":"Name Description info Shows info about the grinder (like session stats, commands ran stats, etc).","title":"info / inf category"},{"location":"user-docs/#servers-category","text":"Name Description servers Shows a list of all the blacklisted servers for this account. servers -help Shows help about the servers command. servers enable Enables the blacklisted servers function. servers disable Disables the blacklisted servers function. servers add 0 Adds the server with the ID of 0 to the list of blacklisted servers. servers remove 0 Removes the server with the ID of 0 from the list of blacklisted servers.","title":"servers category"},{"location":"user-docs/#shifts-category","text":"Name Description shifts Shows a list of all the shifts for this account. shifts -help Shows help about the shifts command. shifts enable Enables the shifts function. shifts disable Disables the shifts function. shifts add 7200 3600 60 Adds a shift with an active length of 7200 , a passive length of 3600 , and a variation of 60 . shifts remove 1 Removes the 1st shift profile.","title":"shifts category"},{"location":"user-docs/#start-category","text":"Name Description start Starts the grinder. start -help Shows help about the start command.","title":"start category"},{"location":"user-docs/#stop-category","text":"Name Description stop Stops the grinder. stop -help Shows help about the stop command.","title":"stop category"},{"location":"user-docs/#config-file","text":"The config.yml file is used to change the way the program runs.","title":"Config file"},{"location":"user-docs/#commands-category","text":"Values in the commands category tell the program whether or not to run certain commands . Name Type Default Value Description adventure Boolean True Tells the program whether or not to run the command pls adventure . beg Boolean True Tells the program whether or not to run the command pls beg . crime Boolean True Tells the program whether or not to run the command pls crime . daily Boolean True Tells the program whether or not to run the command pls daily . dig Boolean True Tells the program whether or not to run the command pls dig . fish Boolean True Tells the program whether or not to run the command pls fish . guess Boolean True Tells the program whether or not to run the command pls guess . highlow Boolean True Tells the program whether or not to run the command pls highlow . hunt Boolean True Tells the program whether or not to run the command pls hunt . postmeme Boolean True Tells the program whether or not to run the command pls postmeme . search Boolean True Tells the program whether or not to run the command pls search . trivia Boolean True Tells the program whether or not to run the command pls trivia . vote Boolean True Tells the program whether or not to vote for Dank Memer on Discord Bot List. work Boolean True Tells the program whether or not to run the command pls work .","title":"commands category"},{"location":"user-docs/#cooldowns-category","text":"Values in the cooldowns category tell the program the cooldowns for each command & cooldowns between commands . Edit them only if you know what you are doing. You have the most optimal settings by default.","title":"cooldowns category"},{"location":"user-docs/#lottery-category","text":"Values in the lottery category tell the program whether lottery tickets should be bought , and how often they should be bought . Name Type Default Value Description enabled Boolean False Tells the program whether or not to buy lottery tickets. cooldown Integer 3600 Tells the program the interval between buying lottery tickets.","title":"lottery category"},{"location":"user-docs/#stream-category","text":"Values in the stream category tell the program whether or not to run the command pls stream , and what buttons should it interact with . Name Type Default Value Description enabled Boolean True Tells the program whether or not to run the command pls stream . ads Boolean True Tells the program whether or not to collect run ads during the stream. chat Boolean True Tells the program whether or not to read the chat during the stream. donations Boolean True Tells the program whether or not to collect donations during the stream.","title":"stream category"},{"location":"user-docs/#blackjack-category","text":"Values in the blackjack category tell the program whether or not to run the command pls blackjack , and how much it should bet each time . Name Type Default Value Description enabled Boolean False Tells the program whether or not to run the command pls blackjack . random Boolean False Tells the program whether or not to choose a random amount each time the command pls blackjack is run, or to choose a pre-set amount. amount Integer 1500 The pre-set amount to be bet if random is set to False . minimum Integer 1500 The minimum amount to be bet if random is set to True . maximum Integer 3000 The maximum amount to be bet if random is set to True .","title":"blackjack category"},{"location":"user-docs/#snakeeyes-category","text":"Values in the snakeeyes category tell the program whether or not to run the command pls snakeeyes , and how much it should bet each time . Name Type Default Value Description enabled Boolean False Tells the program whether or not to run the command pls snakeeyes . random Boolean False Tells the program whether or not to choose a random amount each time the command pls snakeeyes is run, or to choose a pre-set amount. amount Integer 1500 The pre-set amount to be bet if random is set to False . minimum Integer 1500 The minimum amount to be bet if random is set to True . maximum Integer 3000 The maximum amount to be bet if random is set to True .","title":"snakeeyes category"},{"location":"user-docs/#custom-commands-category","text":"Values in the custom commands category tell the program what custom commands should be run and their cooldowns . Name Type Default Value Description enabled Boolean False Tells the program whether or not to run any of the custom commands. NOTE: You can add your own custom commands by following the layout for the default options.","title":"custom commands category"},{"location":"user-docs/#shifts-category_1","text":"Values in the shifts category tell the program whether or not to run Grank in shifts , and the length of active and passive phases . Name Type Default Value Description enabled Boolean False Tells the program whether or not to run in shifts.","title":"shifts category"},{"location":"user-docs/#example-shifts-config","text":"You can add as many shift configs as you want, so long as you number them in order starting from 1 . The program will infinitely cycle through all the shift configurations. Name Type Default Value Description active Integer 7200 Tells the program how long the program should run before sleeping (in seconds). passive Integer 3600 Tells the program how long the program should sleep before running again (in seconds). variation Integer 3600 Tells the program how much to vary the shifts by.","title":"Example shifts config"},{"location":"user-docs/#auto-buy-category","text":"Values in the auto buy category tell the program whether or not to buy certain items if needed. Name Type Default Value Description enabled Boolean True If this is set to False no items will be bought. If it is set to True the program will try and buy the item if their respective config value is True . shovel Boolean True Tells the program whether or not to try and buy the item shovel if needed and the user doesn't have it. fishing pole Boolean True Tells the program whether or not to try and buy the item fishing pole if needed and the user doesn't have it. hunting rifle Boolean True Tells the program whether or not to try and buy the hunting rifle if needed and the user doesn't have it. keyboard Boolean True Tells the program whether or not to try and buy the item keyboard if needed and the user doesn't have it. mouse Boolean True Tells the program whether or not to try and buy the item mouse if needed and the user doesn't have it. adventure ticket Boolean True Tells the program whether or not to try and buy the item adventure ticket if needed and the user doesn't have it.","title":"auto buy category"},{"location":"user-docs/#auto-trade-category","text":"Values in the auto trade category tell the program who items should be traded to , and what items should be traded. Name Type Default Value Description enabled Boolean False If this is set to False no items will be traded. If it is set to True the program will try and trade the item if their respective config value is True . trader token String None The token of the user the items should be traded to. bank note Boolean True Tells the program whether or not to try and trade the item bank note to the user specified in the trader option. tidepod Boolean True Tells the program whether or not to try and trade the item tidepod to the user specified in the trader option. NOTE: You can add your own items to be traded by following the layout for the default options.","title":"auto trade category"},{"location":"user-docs/#auto-accept-trade-category","text":"Values in the anti heist category tell the program whether or not to automatically accept trades and who to accept them from . Name Type Default Value Description enabled Boolean True Tells the program whether or not to automatically accept trades from other users. traders List [0, 0] Tells the program which accounts to automatically accept trades from.","title":"auto accept trade category"},{"location":"user-docs/#auto-sell-category","text":"Values in the auto sell category tell the program what items should be sold (upon receiving them). Name Type Default Value Description enabled Boolean False If this is set to False no items will be sold. If it is set to False the program will try and sell the item if their respective config value is True . apple Boolean True Tells the program whether or not to try and sell the item apple (upon receiving it). common fish Boolean True Tells the program whether or not to try and sell the item common fish (upon receiving it). NOTE: You can add your own items to be traded by following the layout for the default options.","title":"auto sell category"},{"location":"user-docs/#typing-indicator-category","text":"Values in the typing indicator category tell the program whether to make Discord think the self-bot is typing, and for how long it should. This is just for aesthetics and I would recommend it to be off in private servers to increase command speed, and on in public servers to make the self-bot look more legitimate. Name Type Default Value Description enabled Boolean False If this is set to True , the program will make Discord think the self-bot is typing. If it is set to False the program will not make Discord think the self-bot is typing, thus increasing command speed. minimum Float 0 The minimum time for the program to sleep after Discord is told that the user is typing. maximum Float 0.5 The maximum time for the program to sleep after Discord is told that the user is typing.","title":"typing indicator category"},{"location":"user-docs/#message-delay-category","text":"Values in the messge delay category tell the program whether to add random pauses before sending messages and how long the pauses should be for . Name Type Default Value Description enabled Boolean False If this is set to True , the program will add random pauses before sending messages. minimum Float 0 The minimum time for the program to pause. maximum Float 0.5 The maximum time for the program to pause.","title":"message delay category"},{"location":"user-docs/#button-delay-category","text":"Values in the button delay category tell the program whether to add random pauses before interacting with buttons and how long the pauses should be for . Name Type Default Value Description enabled Boolean False If this is set to True , the program will add random pauses before interacting with buttons. minimum Float 0 The minimum time for the program to pause. maximum Float 0.5 The maximum time for the program to pause.","title":"button delay category"},{"location":"user-docs/#dropdown-delay-category","text":"Values in the dropdown delay category tell the program whether to add random pauses before selecting dropdowns and how long the pauses should be for . Name Type Default Value Description enabled Boolean False If this is set to True , the program will add random pauses before selecting dropdowns. minimum Float 0 The minimum time for the program to pause. maximum Float 0.5 The maximum time for the program to pause.","title":"dropdown delay category"},{"location":"user-docs/#anti-heist-category","text":"Values in the anti heist category tell the program whether or not to automatically avert heists by calling the police . Name Type Default Value Description enabled Boolean True Tells the program whether or not to automatically avert heists.","title":"anti heist category"},{"location":"user-docs/#auto-join-heist-category","text":"Values in the auto join heist category tell the program whether or not to automatically join heists directed to other users . Name Type Default Value Description enabled Boolean True Tells the program whether or not to automatically join heists directed to other users.","title":"auto join heist category"},{"location":"user-docs/#auto-start-category","text":"Values in the auto start category tell the program whether or not to automatically start the grinder and which channels to automatically start the grinder in . Name Type Default Value Description enabled Boolean False Tells the program whether or not to automatically start the grinder. channel Integer 0 Tells the program which channels to automatically start the grinder in.","title":"auto start category"},{"location":"user-docs/#blacklisted-servers-category","text":"Values in the logging category tell the program whether or not to ignore messages from certain servers and which servers to ignore the messages from . Name Type Default Value Description enabled Boolean False Tells the program whether or not to ignore messages in the specified channel. servers List [0, 0] Tells the program which servers to ingore messages from.","title":"blacklisted servers category"},{"location":"user-docs/#settings-category","text":"Values in the settings category change how Grank functions . Name Type Default Value Description prefix String grank Granks self-bot commands prefix. patron Boolean False Changes cooldowns to reflect the cooldowns of patrons . timeout Integer 5 Timeout for waiting for responses from Dank Memer to commands that require user interaction (like pls search ).","title":"settings category"},{"location":"user-docs/#logging-category","text":"Values in the logging category tell the program whether or not to log debug and warning messages. We would recommend having at least warning set to True . Fatal errors will be logged regardless of the configuration. Name Type Default Value Description debug Boolean True Tells the program whether or not to log debug messages. warning Boolean True Tells the program whether or not to log warning messages. NOTE : Values in the logging category do not affect logging messages sent when the configuration file is being loaded and the token is being verified.","title":"logging category"},{"location":"user-docs/#webhook-logging-subcategory","text":"Values in the webhook logging subcategory tell the program whether or not to log events through a webhook and the webhook URL to log through. Name Type Default Value Description enabled True False Tells the program whether or not to log events through a webhook. url String discord.com/api/webhooks/ The webhook URL to log events through.","title":"webhook logging subcategory"},{"location":"user-docs/#disclaimer","text":"This is a self-bot. Self-bots are against Discord's TOS. Automation of Dank Memer commands also breaks Dank Memer's rules. By using this program you acknowledge that I can take no responsibility for actions taken against you if you are caught. This being said, I believe the chance of being caught running this script is low, provided you take the appropriate measures. The only probable way you will be caught is if someone tries to send you a message and you don't respond.","title":"Disclaimer"}]}